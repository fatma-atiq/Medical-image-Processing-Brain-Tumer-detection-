from PIL import Image             
import matplotlib.pyplot as plt
import numpy as np
import cv2 
from scipy import ndimage
import glob


path = glob.glob('D:/project/samble/*.jpg')
print(path)



i=0

for img in path:  
    Input_im= np.array(Image.open(img))
    
    if(len(Input_im.shape) > 2):
        
        Gray_Tumer=cv2.cvtColor(Input_im,cv2.COLOR_BGR2GRAY)
        cv2.imwrite('D:/project/gray/result'+str(i)+'.jpg',Gray_Tumer)
        equ = cv2.equalizeHist(Gray_Tumer)
        cv2.imwrite('D:/project/equ/result'+str(i)+'.jpg',equ)
        ret, thresh = cv2.threshold(equ,220,255,cv2.THRESH_BINARY)
        cv2.imwrite('D:/project/thresh/result'+str(i)+'.jpg',thresh)
        colormask = np.zeros(Input_im.shape, dtype=np.uint8)
        colormask[thresh!=0] = np.array((0,0,255))
        blended = cv2.addWeighted(Input_im,0.7,colormask,0.1,0)
        
        
        ret, markers = cv2.connectedComponents(thresh)
        marker_area = [np.sum(markers==m) for m in range(np.max(markers)) if m!=0] 
        #Get label of largest component by area
        largest_component = np.argmax(marker_area)+1 #Add 1 since we dropped zero above                        
        #Get pixels which correspond to the brain
        brain_mask = markers==largest_component
    
        brain_out = Input_im.copy()
        #In a copy of the original image, clear those pixels that don't correspond to the brain
        brain_out[brain_mask==False] = (0,0,0)
        cv2.imwrite('D:/project/brain_out/result'+str(i)+'.jpg',brain_out)
        
        SE=np.ones((7,7),'uint8')
        closing=cv2.morphologyEx(brain_out,cv2.MORPH_CLOSE,SE)
        cv2.imwrite('D:/project/closing/result'+str(i)+'.jpg',closing)
        opening=cv2.morphologyEx(closing,cv2.MORPH_OPEN,SE)
        cv2.imwrite('D:/project/opening/result'+str(i)+'.jpg',opening)
        
        label_hue = np.uint8(179*brain_mask/np.max(brain_mask))
        #np.seterr(divide='ignore',individe='ignore')
        blank_ch = 255*np.ones_like(label_hue)
        labeled_img = cv2.merge([label_hue, blank_ch, blank_ch])
        labeled_img = cv2.cvtColor(labeled_img,cv2.COLOR_HSV2BGR)
        labeled_img[label_hue==0] = 0                         

                                

                             
        cv2.imwrite('D:/project/run samble/result'+str(i)+'.jpg',labeled_img)
        i=i+1
